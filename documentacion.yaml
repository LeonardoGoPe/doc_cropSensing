openapi: 3.0.1
info:
  title: Crop Sensing
  description: Apis
  version: 1.0.0
servers:
- url: http://127.0.0.1:8000
  description: Local
tags:
- name: Crop
  description: Representan los Cultivos (Crop)
- name: Farm
  description: Representan las Fincas (Farm)
- name: Farm-Crop-User
  description: Representa la relación entre Cultivos - Fincas y Usuarios (Tabla ListaCultivos)
- name: User
  description: Representa los usuarios registrados en el sistema
- name: Devices
  description: Representa funciones para manejo de dispositivos y notificaciones
- name: Notificaciones
  description: Representa manejo de notificaciones
- name: Reporteria
  description: Representa los reportes que se pueden generar
paths:
  /info/crop/crops:
    get:
      tags:
      - Crop
      summary: Obtener Cultivos
      description: Api para obtener todos los cultivos (umbrales) registrados en la tabla Cultivos. Devuelve toda la información 
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/objCrop'
                   
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /info/crop/crop/create:
    post:
      tags:
      - Crop
      summary: Crear un Cultivo
      description: Api para crear un registro en la tabla Cultivos. Si se quiere crear un cultivo con imagen, validar desde front que la imagen sea obligatoria, se debe mandar como form-data (multipart) 
      requestBody:
        description: "Se piden como obligatorios en el campo <strong>imagen</strong>. Se envian todos los campos"
        required: true
        content:
          'multipart/form-data':
            schema:
              type: object
              properties:
                dataObject:
                  format: application/json
                  type: object
                  properties:
                    nombre:
                      type: string
                      example: papa
                    minimo_temperatura:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_temperatura:
                      type: integer
                      format: number
                      example: 1.1
                    minimo_humedad:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_humedad:
                      type: integer
                      format: number
                      example: 1.1
                    minimo_precipitacion:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_precipitacion:
                      type: integer
                      format: number
                      example: 1.1
                    minimo_radiacion:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_radiacion:
                      type: integer
                      format: number
                      example: 1.1
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objCrop'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /info/crop/crop/{id}:
    get:
      tags:
      - Crop
      summary: Obtener un Cultivo por ID
      description: Api para obtener un cultivo (umbral) por medio de un pk registrados en la tabla Cultivos. Devuelve toda la información del registro
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objCrop'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        404:
          description: No existe el cultivo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cultivoNoExiste'

    put:
      tags:
      - Crop
      summary: Actualizar un Cultivo por ID
      description: Api para actualizar un cultivo (umbral) por medio de un pk. Se especifica que esta api se utilice para actualizar la información y la imagen por separado. La imagen se envia como form-data(multipar) y la información se puede enviar únicamente como Request Body 
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      requestBody:
        description: "La actualización se debe realizar por separado la imagen y los demás campos.
                      <br/>La imagen se actualiza desde un multipart, los demás campos desde un objeto."
        required: true
        content:
          'multipart/form-data':
            schema:
              type: object
              properties:
                dataMultipart:
                  format: binary
                  type: string

                dataObject:
                  format: application/json
                  type: object
                  properties:
                    nombre:
                      type: string
                      example: papa
                    minimo_temperatura:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_temperatura:
                      type: integer
                      format: number
                      example: 1.1
                    minimo_humedad:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_humedad:
                      type: integer
                      format: number
                      example: 1.1
                    minimo_precipitacion:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_precipitacion:
                      type: integer
                      format: number
                      example: 1.1
                    minimo_radiacion:
                      type: integer
                      format: number
                      example: 1.1
                    maximo_radiacion:
                      type: integer
                      format: number
                      example: 1.1
      
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objCrop'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
      - Crop
      summary: Eliminar un Cultivo por ID
      description: Api para eliminar un registro por medio del ID 
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    format: number
                    example: Cultivo eliminado con éxito
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /info/farm/farms_new:
    get:
      tags:
      - Farm
      summary: Obtener Fincas
      description: Api para obtener todas las Fincas registradas en la tabla Finca. Devuelve toda la información 
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/objFarm'
                  
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /info/farm/farm_new/create:
    post:
      tags:
      - Farm
      summary: Crear una Finca
      description: Api para crear un registro en la tabla Finca. Si se quiere crear una finca con imagen, validar desde front que la imagen sea obligatoria, se debe mandar como form-data (multipart) 
      requestBody:
        description: "Se piden como obligatorios en el campo <strong>imagen</strong>. Se envian todos los campos"
        required: true
        content:
          'multipart/form-data':
            schema:
              type: object
              properties:
                data:
                  format: binary
                  type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objFarm'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /info/farm/farm_new/{id}:
    get:
      tags:
      - Farm
      summary: Obtener una Finca por ID
      description: Api para obtener todas las fincas registradas en la tabla Finca. Devuelve toda la información 
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objFarm'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        404:
          description: No existe la finca
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fincaNoExiste'

    put:
      tags:
      - Farm
      summary: Actualizar una Finca por ID
      description: Api para actualizar una finca por medio de un ID. Se especifica que esta api se utilice para actualizar la información y la imagen por separado. La imagen se envia como form-data(multipar) y la información se puede enviar únicamente como Request Body
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      requestBody:
        description: "La actualización se debe realizar por separado la imagen y los demás campos.
                      <br/>La imagen se actualiza desde un multipart, los demás campos desde un objeto."
        required: true
        content:
          'multipart/form-data':
            schema:
              type: object
              properties:
                dataMultipart:
                  format: binary
                  type: string

                dataObject:
                    format: application/json
                    type: object
                    properties:
                      nombre:
                        type: string
                        example: ESPOL
                      imagen:
                        type: string
                        example: /images/finca/espol.jpeg
                      user:
                        type: integer
                        format: number
                        example: 1
        
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objFarm'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
      - Farm
      summary: Eliminar una Finca por ID
      description: Api para eliminar un registro por medio del ID 
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    format: number
                    example: Finca eliminada con éxito
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /info/crop/farms_crops_users:
    get:
      tags:
      - Farm-Crop-User
      summary: Obtener la data de la relación en la tabla ListaCultivos 
      description: Api para obtener la data de los registros que existen en la tabla ListaCultivos
      parameters:
      - name: user_tag
        in: query
        description: Campo user_tag (Identificador del usuario). Si se envia, se traen los registros del usuario. En caso de no enviarlo, se traen todos los registros de la tabla
        required: false
        schema:
          type: string
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: 
                    id:
                      type: integer
                      format: number
                      example: 1
                    cultivo: 
                      $ref: '#/components/schemas/objCrop'
                    finca: 
                      $ref: '#/components/schemas/objFarm'
                    user: 
                      $ref: '#/components/schemas/objUser'
                   
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /info/crop/farm_crop_user_create:
    post:
      tags:
      - Farm-Crop-User
      summary: Crear una relación entre Finca-Cultivo-Usuario
      description: Api para crear un registro en la tabla ListaCultivos.
      requestBody:
        description: "Se piden como obligatorios todos los campos"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_user:
                  type: integer
                  format: number
                  example: 1
                id_finca:
                  type: integer
                  format: number
                  example: 1
                id_cultivo:
                  type: integer
                  format: number
                  example: 1
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: 
                    id:
                      type: integer
                      format: number
                      example: 1
                    cultivo: 
                      $ref: '#/components/schemas/objCrop'
                    finca: 
                      $ref: '#/components/schemas/objFarm'
                    user: 
                      $ref: '#/components/schemas/objUser'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /info/crop/farm_crop_user/{id}:
    get:
      tags:
      - Farm-Crop-User
      summary: Obtener un registro de la tabla ListaCultivos
      description: Api para obtener un registro de la tabla ListaCultivos
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                    format: number
                    example: 1
                  cultivo: 
                    $ref: '#/components/schemas/objCrop'
                  finca: 
                    $ref: '#/components/schemas/objFarm'
                  user: 
                    $ref: '#/components/schemas/objUser'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
        404:
          description: No existe la finca
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UCFNoExiste'

    put:
      tags:
      - Farm-Crop-User
      summary: Actualizar un registro de la tabla ListaCultivos
      description: Api para actualizar un registro de la tabla ListaCultivos. Devuelve toda la información
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      requestBody:
        description: "Se puede actualizar cualquiera de los tres id"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_user:
                  type: integer
                  format: number
                  example: 1
                id_finca:
                  type: integer
                  format: number
                  example: 1
                id_cultivo:
                  type: integer
                  format: number
                  example: 1
        
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: 
                  id:
                    type: integer
                    format: number
                    example: 1
                  cultivo: 
                    $ref: '#/components/schemas/objCrop'
                  finca: 
                    $ref: '#/components/schemas/objFarm'
                  user: 
                    $ref: '#/components/schemas/objUser'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
      - Farm-Crop-User
      summary: Eliminar un registro de la tabla ListaCultivos
      description: Api para eliminar un registro de la tabla ListaCultivos. Devuelve toda la información
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    format: number
                    example: Relación Usuario, Cultivo y Finca eliminada con éxito
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/users:
    get:
      tags:
      - User
      summary: Obtener la data de los Usuarios en el sistema
      description: Api para obtener la data de los usuarios registrados en el sistema
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: 
                    id:
                      type: integer
                      format: number
                      example: 1
                    user_tag:
                      type: string
                      example: Prueba
                    user_type:
                      type: integer
                      format: number
                      example: 1
                    data_user_table: 
                      properties: 
                        id:
                          type: integer
                          format: number
                          example: 1
                        username:
                          type: string
                          example: ESPOL
                        first_name:
                          type: string
                          example: CIDIS
                        last_name:
                          type: string
                          example: ESPOL
                        email:
                          type: string
                          example: cidis@espol.edu.ec
                   
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/devices:
    post:
      tags:
      - Devices
      summary: Registra un dispositivo
      description: Api para registrar un dispositivo (llamarla luego del login)
      requestBody:
        description: user corresponde al id del usuario (tabla User).
                      <br/>registration_id corresponde al token del dispositivo
                      <br/>type corresponde al tipo de dispositivo
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: integer
                  format: number
                  example: 1
                registration_id:
                  type: string
                  example: "11111111"
                type:
                  type: string
                  example: "android"
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objDevice'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/devices/delete/{id}:
    delete:
      tags:
      - Devices
      summary: Eliminar un dispositivo
      description: Api para eliminar un dispositivo, que se debe llamar luego del desloguearse
      parameters:
      - name: id
        in: path
        description: Id del Usuario que se logueo (se obtiene en el login)
        required: true
        schema:
          type: number
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    format: number
                    example: Successful
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/notifications:
    post:
      tags:
      - Devices
      summary: Envia notificaciones
      description: Api para enviar notificaciones (no definido el response aún)
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  properties: 
                    mensaje:
                      type: string
                      example: Prueba
                
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /info/notifications/notifications:
    get:
      tags:
      - Notificaciones
      summary: Obtener las notificaciones
      description: Api para obtener las notificaciones
      parameters:
      - name: user_tag
        in: query
        description: Campo user_tag (Identificador del usuario). Si se envia, se traen los registros del usuario. En caso de no enviarlo, se traen todos los registros de la tabla
        required: true
        schema:
          type: string
      - name: was_reviewed
        in: query
        description: Filtra por registros activos. Se envía 'S' o 'N'
        required: false
        schema:
          type: string    
          example: N
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/objNotificaciones'
                   
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /info/notifications/notifications/{id}:
    put:
      tags:
      - Notificaciones
      summary: Actualizar registro de notificaciones
      description: Api para actualizar un registro de notificaciones, enfocado para actualizar el campo 'fue_revisada'
      parameters:
      - name: id
        in: path
        description: Identificador del registro
        required: true
        schema:
          type: number
      requestBody:
        description: Enviar el campo fue_revisada para actualizar luego de que el usuario haya visto la notificacion
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fue_revisada:
                  type: string
                  example: S
        
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/objNotificaciones'
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /util/general_report:
    post:
      tags:
      - Reporteria
      summary: Obtener reporte general
      description: Api para obtener reporte general en formato PDF
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tiempo:
                  type: string
                  example: "Última Hora"
                cultivo:
                  type: string
                  example: "cebolla"
                user_tag:
                  type: string
                  example: "Prueba"
                medida:
                  type: string
                  example: "radiacion"
                finca:
                  type: string
                  example: "ESPOL"
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: string
                example: string
                   
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /util/farm_detail_report:
    post:
      tags:
      - Reporteria
      summary: Obtener reporte de los detalles de la finca
      description: Api para obtener reporte de los detalles de la finca en formato PDF
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tiempo:
                  type: string
                  example: "Última Hora"
                cultivo:
                  type: string
                  example: "cebolla"
                user_tag:
                  type: string
                  example: "Prueba"
                medida:
                  type: string
                  example: "radiacion"
                finca:
                  type: string
                  example: "ESPOL"
      responses:
        200:
          description: Operación exitosa.
          content:
            application/json:
              schema:
                type: string
                example: string
                   
        400:
          description: Cualquier error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



components:
  schemas:

    cultivoNoExiste:
      type: object
      properties:
        message:
          type: string
          example: 'Cultivo no existe'

    fincaNoExiste:
      type: object
      properties:
        message:
          type: string
          example: 'Finca no existe'
  

    UCFNoExiste:
      type: object
      properties:
        message:
          type: string
          example: 'El objeto que relaciona al Usuario, Cultivo y Finca no existe'

    Error:
      type: object
      properties:
        {}

    objCrop:
      type: object
      properties:
        id:
          type: integer
          format: number
          example: 1
        nombre:
          type: string
          example: papa
        imagen:
          type: string
          example: /images/cultivo/papa.jpeg
        minimo_temperatura:
          type: integer
          format: number
          example: 1.1
        maximo_temperatura:
          type: integer
          format: number
          example: 1.1
        minimo_humedad:
          type: integer
          format: number
          example: 1.1
        maximo_humedad:
          type: integer
          format: number
          example: 1.1
        minimo_precipitacion:
          type: integer
          format: number
          example: 1.1
        maximo_precipitacion:
          type: integer
          format: number
          example: 1.1
        minimo_radiacion:
          type: integer
          format: number
          example: 1.1
        maximo_radiacion:
          type: integer
          format: number
          example: 1.1

    objFarm:
      type: object
      properties:
        id:
          type: integer
          format: number
          example: 1
        nombre:
          type: string
          example: ESPOL
        imagen:
          type: string
          example: /images/finca/espol.jpeg
        descripcion:
          type: string
          example: Es la finca del campus
        user:
          type: integer
          format: number
          example: 1

    objUser:
      type: object
      properties:
        id:
          type: integer
          format: number
          example: 1
        user:
          type: string
          example: ESPOL
        user_tag:
          type: string
          example: Prueba

    objDevice:
      type: object
      properties:
        id:
          type: integer
          format: number
          example: 1
        name:
          type: string
          example: null
        registration_id:
          type: string
          example: 1111111
        device_id:
          type: string
          example: null
        active:
          type: boolean
          example: true
        date_created:
          type: string
          example: 2022-07-31T20:51:03.983182Z
        type:
          type: string
          example: android

    objNotificaciones:
      type: object
      properties:
        id:
          type: integer
          format: number
          example: 1
        user_tag:
          type: string
          example: Prueba
        titulo:
          type: string
          example: Titulo
        cuerpo:
          type: string
          example: Cuerpo
        fue_revisada:
          type: string
          example: N
        fecha:
          type: string
          example: "2022-08-02 21:31:14"
        dia:
          type: string
          example: MARTES
